对于递增有序的数据表 A 和 B，集合运算的算法思路可以简化为双指针法：

交集（Intersection）：

使用两个指针分别指向 A 和 B 的第一个元素。
比较 A 和 B 当前指向的元素。
如果相等，说明该元素在交集中，记录该元素，然后两个指针都移动到下一个元素。
如果 A 的元素小于 B 的元素，移动 A 的指针。
反之，移动 B 的指针。
重复直到其中一个指针超出数组范围。
并集（Union）：

使用两个指针分别指向 A 和 B 的第一个元素。
比较 A 和 B 当前指向的元素。
如果相等，将该元素加入并集，然后两个指针都移动到下一个元素。
如果 A 的元素小于 B 的元素，将 A 的元素加入并集，并移动 A 的指针。
如果 B 的元素小于 A 的元素，将 B 的元素加入并集，并移动 B 的指针。
重复直到其中一个指针超出数组范围，最后将剩余的元素直接加入并集中。
差集（Difference）：

针对 A - B（即 A 的差集）：
使用两个指针分别指向 A 和 B 的第一个元素。
如果 A 的元素小于 B 的元素，将 A 的元素加入差集，并移动 A 的指针。
如果 A 的元素等于 B 的元素，跳过该元素并同时移动 A 和 B 的指针。
如果 A 的元素大于 B 的元素，只移动 B 的指针。
重复直到 A 的指针超出数组范围。
针对 B - A 类似处理。